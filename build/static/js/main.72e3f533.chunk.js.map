{"version":3,"sources":["pages/home/store/actionCreator.js","pages/home/store/constants.js","pages/home/store/reducer.js","games/TicTacToe/store/reducer.js","games/2048/store/constants.js","games/2048/store/actionCreator.js","games/2048/ds/Board.js","games/2048/store/reducer.js","apps/AudioPlayer/store/contants.js","utils/Dispatcher.js","apps/AudioPlayer/store/reducer.js","apps/AudioPlayer/store/player.js","apps/ImgUploader/store/constants.js","config/config.js","apps/ImgUploader/store/imgUpLoader.js","apps/ImgUploader/store/actionCreator.js","apps/ImgUploader/store/reducer.js","apps/Todo/store/reducer.js","store/reducer.js","games/TicTacToe/store/constants.js","apps/Todo/store/constants.js","store/index.js","common/header/index.js","common/progress/index.js","pages/home/components/Game.js","pages/home/index.js","games/TicTacToe/components/Piece.js","games/TicTacToe/store/actionCreator.js","games/TicTacToe/components/Board.js","games/TicTacToe/index.js","games/2048/components/Piece.js","games/2048/components/Row.js","games/2048/components/Board.js","games/2048/components/Controller.js","games/2048/components/Panel.js","games/2048/B2048.js","games/2048/index.js","apps/AudioPlayer/components/Disk.js","apps/AudioPlayer/store/actionCreator.js","apps/AudioPlayer/components/Controller.js","apps/AudioPlayer/components/ProgressBar.js","apps/AudioPlayer/AudioPlayer.js","apps/AudioPlayer/index.js","pages/game/index.js","apps/ImgUploader/components/Loader.js","apps/ImgUploader/components/Submitter.js","common/ImgIcon/index.js","common/RoundProgress/index.js","apps/ImgUploader/components/UploadInfo.js","utils/byte.js","apps/ImgUploader/components/UploadBox.js","apps/ImgUploader/components/Uploader.js","apps/ImgUploader/ImgUploader.js","apps/ImgUploader/index.js","apps/Todo/components/Controller.js","apps/Todo/store/actionCreator.js","apps/Todo/components/Item.js","apps/Todo/components/List.js","apps/Todo/Todo.js","apps/Todo/index.js","pages/app/index.js","App.js","index.js","assets/icon/header/handler.svg","assets/audio/2048/move.mp3","assets/audio/2048/popup.mp3","common/ImgIcon/asset/gif.svg","common/ImgIcon/asset/png.svg","common/ImgIcon/asset/jpg.svg","common/ImgIcon/asset/jpeg.svg","common/ImgIcon/asset/svg.svg","common/ImgIcon/asset/bmp.svg","common/ImgIcon/asset/tiff.svg","common/ImgIcon/asset/unknown.svg","assets/icon/public/close.svg"],"names":["getGames","dispatch","axios","get","then","res","body","data","console","log","updateGames","catch","err","type","defaultState","games","winner","isNextX","board","Array","fill","calculateWinner","lines","i","length","a","b","c","INIT","RESET","actionCreator","init","actionTypes","placeRandom","moveUp","moveDown","moveLeft","moveRight","reset","_row","Symbol","_col","transform","grids","forward","maxLevel","reversed","map","value","index","sort","forEach","grid","toIndex","score","reverse","latest","offset","toValue","getScore","filter","Board","size","isMoved","gameOver","this","JSON","parse","stringify","from","row","level","Error","spacesRemain","j","push","n","idx","Math","floor","random","slice","col","changes","newScore","getRow","getCol","str","initState","START","PAUSE","GET_PREV","GET_NEXT","Dispatcher","handlers","handler","args","player","audioContext","AudioContext","playList","playIndex","emptyNode","file","start","source","buffer","onPlay","onPause","onChange","onReady","Promise","resolve","reject","reader","FileReader","onload","evt","decodeAudioData","target","result","onerror","readAsArrayBuffer","isEmpty","readAudioBuffer","emit","current","createBufferSource","onended","next","bind","connect","destination","currentTime","stop","disconnect","position","pause","play","max","val","duration","isPlaying","hasMusic","ADD_IMG","DELETE_IMG","UPLOAD_ALL","config","baseurl","defaultImg","uploadUrl","imgFilter","loader","files","emptyImg","xhr","name","mime","base64","binaryString","loaded","total","percentage","isPrepared","isUploaded","isUploading","onUploading","onError","onLoaded","test","e","imgBase64","readAsDataURL","readAsBinaryString","_loadImgFileToBase64","_loadImgFileToBinary","imgBinary","img","newList","abort","delete","XMLHttpRequest","_upload","imgFile","fileIdx","upload","addEventListener","lengthComputable","ceil","toString","overrideMimeType","open","send","uploadImg","append","addImg","deleteImg","uploadPrepare","uploadAll","FinishUpload","uploadCancel","thing","intended","completed","reducer","combineReducers","home","state","action","Object","assign","ttt","2048","b2048","birth","newLevel","up","down","left","right","copy","APlayer","prev","ImgUploader","cancel","todo","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","className","src","alt","to","React","Component","ProgressBar","props","pxty","style","width","Game","title","imgUrl","backgroundImage","Home","item","key","url","changeHomeData","getIn","Piece","piece","onClick","setPiece","preventDefault","info","renderPiece","restartGame","TTT","point","calculatedPoint","generateClass","Row","Controller","keyDownHandler","keyCode","handleKeyUp","handleMoveUp","handleMoveDown","handleMoveLeft","handleMoveRight","handleReset","generalMove","onMoveUp","onMoveLeft","onMoveDown","onMoveRight","onReset","delay","keyUpHandler","debounce","leading","removeEventListener","move","audioMove","setTimeout","audioPopup","onPlaceRandom","Panel","B2048","Audio","moveAudio","popupAudio","initGame","Disk","handleFile","htmlFor","id","htmlref","accept","multiple","persist","addMusic","centerIcon","ControllHandler","getPrev","getNext","alert","progress","frameId","draw","requestAnimationFrame","percent","setState","toFixed","cancelAnimationFrame","min","sec","replace","formatName","formatTime","AudioPlayer","Games","path","component","Loader","handleAdd","handleDel","Submitter","FileIcon","imgIcon","subType","formatImgType","gif","png","jpeg","jpg","svg","bmp","tiff","unknown","multiType","split","RoundProgress","UploadInfo","overInfo","close","cancelUpload","listen","showError","showInfo","color","fontSize","byteTransform","nBytes","sOutput","aMultiples","nMultiple","nApprox","UploadBox","Uploader","TodoController","changeInput","addTodoItem","clearTodoList","getInputChangeAction","TodoItem","status","todoItem","finishTodoItem","ownProps","todoIdx","TodoList","list","Todo","Apps","App","exact","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.72e3f533.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport * as actionTypes from \"./constants\";\n\nexport const getGames = () => {\n    return (dispatch) => {\n        axios\n            .get(\"/api/gameList.json\")\n            .then((res) => {\n                const body = res.data;\n                console.log(body.data);\n                dispatch(updateGames(body.data));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const updateGames = (data) => {\n    return {\n        type: actionTypes.UPDATE_GAMES,\n        data,\n    };\n};\n","export const UPDATE_GAMES = \"home/UPDATE_GAMES\";\n","import * as actionTypes from \"./constants\";\n\nconst defaultState = {\n    games: [],\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case actionTypes.UPDATE_GAMES:\n            return Object.assign({}, state, {\n                games: action.data,\n            });\n        default:\n            return state;\n    }\n};\n","import * as actionType from \"./constants\";\n\nconst defaultState = {\n    winner: \"\",\n    isNextX: true,\n    board: new Array(9).fill(\"O\"),\n};\n\nexport default (state = defaultState, action) => {\n    let board, isNextX, winner;\n    switch (action.type) {\n        case actionType.SET_PIECE:\n            board = state.board.slice();\n            isNextX = state.isNextX;\n            winner = state.winner;\n            if (board[action.index]) {\n                return state;\n            }\n            if (!calculateWinner(board)) {\n                board[action.index] = isNextX ? \"X\" : \"O\";\n                isNextX = !isNextX;\n                winner = calculateWinner(board);\n            }\n\n            return Object.assign({}, state, {\n                winner,\n                isNextX,\n                board,\n            });\n        case actionType.RESTART_GAME:\n            board = new Array(9).fill(null);\n            isNextX = true;\n            winner = \"\";\n            return {\n                winner,\n                isNextX,\n                board,\n            };\n        default:\n            return state;\n    }\n};\n\nfunction calculateWinner(board) {\n    let lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        let [a, b, c] = lines[i];\n        if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n            return board[a];\n        }\n    }\n    return null;\n}\n","export const INIT = \"2048/INIT\";\n\nexport const PLACE_RANDOM = \"2048/PLACE_RANDOM\";\n\nexport const MOVE_UP = \"2048/MOVE_UP\";\nexport const MOVE_DOWN = \"2048/MOVE_DOWN\";\nexport const MOVE_LEFT = \"2048/MOVE_LEFT\";\nexport const MOVE_RIGHT = \"2048/MOVE_RIGHT\";\n\nexport const RESET = \"2048/RESET\";\n","import * as actionTypes from \"./constants\";\n\nconst actionCreator = (type) => () => ({ type });\n\nexport const init = actionCreator(actionTypes.INIT);\n\nexport const placeRandom = actionCreator(actionTypes.PLACE_RANDOM);\n\nexport const moveUp = actionCreator(actionTypes.MOVE_UP);\n\nexport const moveDown = actionCreator(actionTypes.MOVE_DOWN);\n\nexport const moveLeft = actionCreator(actionTypes.MOVE_LEFT);\n\nexport const moveRight = actionCreator(actionTypes.MOVE_RIGHT);\n\nexport const reset = actionCreator(actionTypes.RESET);\n","const _row = Symbol(\"row\");\nconst _col = Symbol(\"col\");\n\n/**\n * align grids by forward and merge the neighboring grids which has same value and remove empty grids.\n * @param {Array} grids\n * @param {Boolean} forward\n * @param {Number} maxLevel\n * @returns {any}\n */\nfunction transform(grids, forward, maxLevel) {\n    // 倒置标记位, 左移为 1， 右移为 -1.\n    const reversed = forward ? -1 : 1;\n    grids = grids.map((value, index) => {\n        return { value, index };\n    });\n    //   消除格子之间的空位，向左或者向右对齐\n    grids.sort((a, b) => {\n        // 处理空位的代码：\n        // 如果，右边(即 a)为空位左边不为空位，如果是右移那就颠倒位置，左移位置不变。\n        if (a.value < 0 && b.value >= 0) return reversed;\n        // 如果，右边(即 a)不为空位左边为空位，如果是左移那就颠倒位置，右移则不变。\n        if (a.value >= 0 && b.value < 0) return -reversed;\n        // 不然位置也是不变的。\n        return a.index - b.index;\n    });\n\n    grids.forEach((grid, i) => {\n        grid.toIndex = i;\n    });\n    // 合并可以合并的格子\n    let score = 0;\n    grids = forward ? grids.reverse() : grids;\n    let latest = -1;\n    let offset = 0;\n    for (let i = 0; i < grids.length; i++) {\n        let grid = grids[i];\n        if (latest >= 0 && latest === grid.value && latest < maxLevel) {\n            grids[i - 1].toValue = grids[i - 1].value + 1;\n            score += getScore(grids[i - 1].toValue);\n            grid.toValue = -1;\n            latest = grid.toValue;\n            offset -= reversed;\n        } else {\n            grid.toValue = grid.value;\n            latest = grid.value;\n        }\n        grid.toIndex += offset;\n    }\n    //   过滤空格子\n    return {\n        score,\n        grids: grids.filter((grids) => grids.value >= 0),\n    };\n}\n\nfunction getScore(i) {\n    return 2 ** i;\n}\n\nexport default class Board {\n    /**\n     * @param {Number} size\n     * @param {Number} maxLevel\n     */\n    constructor({\n        size = 4,\n        maxLevel = 11,\n        score = 0,\n        board,\n        isMoved,\n        gameOver,\n    }) {\n        this.size = size;\n        this.score = score;\n        this.maxLevel = maxLevel;\n        // 注意这里不能使用 new Array 初始化，形成的空位会被 mapApi 忽略。\n        this.board =\n            JSON.parse(JSON.stringify(board)) ||\n            Array.from({ length: size }).map((row) => new Array(size).fill(-1));\n        this.isMoved = isMoved;\n        this.gameOver = gameOver;\n    }\n    /**\n     * birth is a function to create new numbers on board.\n     * @param {Number} level\n     */\n    birth(level = 1) {\n        if (level >= this.maxLevel) {\n            throw new Error(\"new number too big\");\n        }\n        // 找出目前棋盘空位\n        let spacesRemain = [];\n        for (let i = 0; i < this.size; i++) {\n            for (let j = 0; j < this.size; j++) {\n                if (this.board[i][j] === -1) {\n                    spacesRemain.push([i, j]);\n                }\n            }\n        }\n        let n = spacesRemain.length;\n        if (n) {\n            // 随机生成位置\n            let idx = Math.floor(Math.random() * n);\n            //   生成新块\n            let [i, j] = spacesRemain[idx];\n            this.board[i][j] = level;\n            return this;\n            // return spacesRemain[idx];\n        }\n        this.gameOver = true;\n        // 没有空位\n        return this;\n        // return [-1, -1];\n    }\n\n    /**\n     * get a copied row from the board\n     * @param {Number} i\n     * @returns {Array}\n     */\n    getRow(i) {\n        if (i < 0 || i >= this.size) {\n            throw new Error(\"illegal row idx.\");\n        }\n        return this.board[i].slice(0);\n    }\n    /**\n     * get a copied col from the board\n     * @param {Number} j\n     * @returns {Array}\n     */\n    getCol(j) {\n        if (j < 0 || j >= this.size) {\n            throw new Error(\"illegal row idx.\");\n        }\n        let col = [];\n        for (let i = 0; i < this.size; i++) {\n            col.push(this.board[i][j]);\n        }\n        return col;\n    }\n    /**\n     * _row tranform the board and memorize the changes when the moving direction is left or right.\n     * @param {Boolean} forward\n     * @returns {Array}\n     */\n    [_row](forward) {\n        const board = this.board;\n        const changes = [];\n        let newScore = this.score;\n        // 对棋盘的每一行进行变换，并且记录改变的单元格\n        for (let i = 0; i < this.size; i++) {\n            //   获取变化完之后的单元格\n            let { score, grids } = transform(\n                this.getRow(i),\n                forward,\n                this.maxLevel\n            );\n            // 更新棋盘\n            for (let j = 0; j < this.size; j++) {\n                board[i][j] = -1;\n            }\n            grids.forEach((grid) => {\n                let { index, toIndex, toValue } = grid;\n                grid.index = [i, index];\n                grid.toIndex = [i, toIndex];\n                if (toValue >= 0) {\n                    board[i][toIndex] = toValue;\n                }\n            });\n            // 记录变化值\n            newScore += score;\n            changes.push(...grids);\n        }\n        // 更新分数\n        this.score = newScore;\n        // 返回真正发生改变的单元格\n        return changes.filter((grid) => {\n            return (\n                grid.index[0] !== grid.toIndex[0] ||\n                grid.index[1] !== grid.toIndex[1] ||\n                grid.value !== grid.toValue\n            );\n        });\n    }\n    /**\n     * row move backward\n     * @returns {Array}\n     */\n    left() {\n        let changes = this[_row]();\n        this.isMoved = changes.length > 0;\n        return this;\n    }\n    /**\n     * row move forward\n     * @returns {Array}\n     */\n    right() {\n        let changes = this[_row](true);\n        this.isMoved = changes.length > 0;\n        return this;\n    }\n    /**\n     * _col tranform the board and memorize the changes when the moving direction is up or down.\n     * @param {Boolean} forward\n     * @returns {Array}\n     */\n    [_col](forward) {\n        const board = this.board;\n        const changes = [];\n        let newScore = this.score;\n        // 对棋盘的每一行进行变换，并且记录改变的单元格\n        for (let j = 0; j < this.size; j++) {\n            //   获取变化完之后的单元格\n            let { score, grids } = transform(\n                this.getCol(j),\n                forward,\n                this.maxLevel\n            );\n            // 更新棋盘\n            for (let i = 0; i < this.size; i++) {\n                board[i][j] = -1;\n            }\n            grids.forEach((grid) => {\n                let { index, toIndex, toValue } = grid;\n                grid.index = [index, j];\n                grid.toIndex = [toIndex, j];\n                if (toValue >= 0) {\n                    board[toIndex][j] = toValue;\n                }\n            });\n            //   记录变化值\n            newScore += score;\n            changes.push(...grids);\n        }\n        // 返回真正发生改变的单元格\n        this.score = newScore;\n        return changes.filter((grid) => {\n            return (\n                grid.index[0] !== grid.toIndex[0] ||\n                grid.index[1] !== grid.toIndex[1] ||\n                grid.value !== grid.toValue\n            );\n        });\n    }\n    /**\n     * col move backward\n     * @returns {Array}\n     */\n    up() {\n        let changes = this[_col]();\n        this.isMoved = changes.length > 0;\n        return this;\n    }\n    /**\n     * col move backward\n     * @returns {Array}\n     */\n    down() {\n        let changes = this[_col](true);\n        this.isMoved = changes.length > 0;\n        return this;\n    }\n    /**\n     * @return {string}\n     */\n    toString() {\n        let str = \"\";\n        this.board.forEach((row) => {\n            row.forEach((grid) => {\n                grid = grid === -1 ? \"ø\" : grid;\n                str += `${grid}\\t`;\n            });\n            str += \"\\n\\n\";\n        });\n        return str;\n    }\n}\n","import * as actionTypes from \"./constants\";\nimport Board from \"../ds/Board\";\n\nconst initState = {\n    size: 4,\n    maxLevel: 13,\n    score: 0,\n    board: [\n        [-1, -1, -1, -1],\n        [-1, -1, -1, -1],\n        [-1, -1, -1, -1],\n        [-1, -1, -1, -1],\n    ],\n    isMoved: true,\n    // Array.from({ length: 4 }).map((row) => new Array(4).fill(-1)),\n    gameOver: false,\n};\n\nexport default (state = initState, action) => {\n    let b2048 = new Board(state);\n    switch (action.type) {\n        case actionTypes.INIT: {\n            b2048.birth();\n            const result = b2048.birth();\n            return { ...state, ...result };\n        }\n        case actionTypes.PLACE_RANDOM: {\n            let newLevel = Math.random() > 0.5 ? 2 : 1;\n            const result = b2048.birth(newLevel);\n            return { ...state, ...result };\n        }\n        case actionTypes.MOVE_UP: {\n            const result = b2048.up();\n            return { ...state, ...result };\n        }\n        case actionTypes.MOVE_DOWN: {\n            const result = b2048.down();\n            return { ...state, ...result };\n        }\n        case actionTypes.MOVE_LEFT: {\n            const result = b2048.left();\n            return { ...state, ...result };\n        }\n        case actionTypes.MOVE_RIGHT: {\n            const result = b2048.right();\n            return { ...state, ...result };\n        }\n        case actionTypes.RESET: {\n            const copy = JSON.parse(JSON.stringify(initState));\n            b2048 = new Board(copy);\n            b2048.birth();\n            const result = b2048.birth();\n            return { ...copy, ...result };\n        }\n        default:\n            return state;\n    }\n};\n","export const ADD_MUSIC = \"aplayer/ADD_MUSIC\";\n\nexport const START = \"aplayer/START\";\n\nexport const PAUSE = \"aplayer/PAUSE\";\n\nexport const GET_PREV = \"aplayer/GET_PREV\";\n\nexport const GET_NEXT = \"aplayer/GET_NEXT\";\n","export default class Dispatcher {\n    constructor() {\n        this.handlers = [];\n    }\n    listen(handler) {\n        this.handlers.push(handler);\n    }\n    emit(...args) {\n        this.handlers.forEach((handler) => {\n            handler(...args);\n        });\n    }\n}\n","import Player from \"./player\";\nimport * as actionTypes from \"./contants\";\n\nlet player = new Player();\n\nconst defaultState = {\n    player,\n    isPlaying: false,\n    hasMusic: false,\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_MUSIC: {\n            player.append(action.file);\n            return Object.assign({}, state, {\n                hasMusic: action.file ? true : false,\n            });\n        }\n        case actionTypes.GET_NEXT: {\n            player.next();\n            return Object.assign({}, state, {\n                isPlaying: true,\n            });\n        }\n        case actionTypes.GET_PREV: {\n            player.prev();\n            return Object.assign({}, state, {\n                isPlaying: true,\n            });\n        }\n        case actionTypes.START: {\n            player.play();\n            return Object.assign({}, state, {\n                isPlaying: true,\n            });\n        }\n        case actionTypes.PAUSE: {\n            player.pause();\n            return Object.assign({}, state, {\n                isPlaying: false,\n            });\n        }\n        default:\n            return state;\n    }\n};\n","import Dispatcher from \"../../../utils/Dispatcher\";\nexport default class Player {\n    constructor() {\n        this.audioContext = new AudioContext();\n        this.playList = [];\n        this.playIndex = 0;\n\n        this.emptyNode = {\n            file: null,\n            offset: 0,\n            start: null,\n            source: null,\n            buffer: null,\n        };\n\n        this.onPlay = new Dispatcher();\n        this.onPause = new Dispatcher();\n        this.onChange = new Dispatcher();\n        this.onReady = new Dispatcher();\n    }\n\n    async readAudioBuffer(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = async (evt) => {\n                this.audioContext\n                    .decodeAudioData(evt.target.result)\n                    .then(resolve, reject);\n            };\n            reader.onerror = reject;\n            reader.readAsArrayBuffer(file);\n        });\n    }\n\n    async append(file) {\n        const isEmpty = this.isEmpty;\n        this.playList.push({\n            file,\n            offset: 0,\n            start: null,\n            source: null,\n            buffer: await this.readAudioBuffer(file),\n        });\n        if (isEmpty) {\n            this.onReady.emit(this);\n        }\n    }\n\n    play() {\n        if (!this.playList.length || this.current.source) {\n            return;\n        }\n        const source = this.audioContext.createBufferSource();\n        source.buffer = this.current.buffer;\n        source.onended = this.next.bind(this);\n        source.connect(this.audioContext.destination);\n        source.start(0, this.current.offset);\n        this.current.source = source;\n        this.current.start = this.audioContext.currentTime;\n\n        this.onPlay.emit(this);\n    }\n\n    pause() {\n        if (!this.playList.length || !this.current.source) {\n            return;\n        }\n        this.current.source.stop(0);\n        this.current.source.disconnect(0);\n        this.current.source.onended = null;\n        this.current.source = null;\n        this.current.offset = this.position;\n        this.current.start = null;\n\n        this.onPause.emit(this);\n    }\n\n    stop() {\n        this.pause();\n        this.current.offset = 0;\n        this.current.start = null;\n    }\n\n    next() {\n        this.stop();\n        this.playIndex++;\n        if (this.playIndex >= this.playList.length) {\n            this.playIndex = 0;\n        }\n        this.play();\n        this.onChange.emit(this);\n    }\n\n    prev() {\n        this.stop();\n        this.playIndex--;\n        if (this.playIndex < 0) {\n            this.playIndex = Math.max(this.playList.length - 1, 0);\n        }\n        this.play();\n        this.onChange.emit(this);\n    }\n\n    get isEmpty() {\n        return this.current === this.emptyNode;\n    }\n\n    get current() {\n        return this.playList[this.playIndex] || this.emptyNode;\n    }\n\n    get position() {\n        if (!this.playList.length) {\n            return 0;\n        }\n        return (\n            this.current.offset +\n            (this.current.start !== null\n                ? this.audioContext.currentTime - this.current.start\n                : 0)\n        );\n    }\n\n    set position(val) {\n        if (!this.playList.length) {\n            return;\n        }\n        this.stop();\n        this.current.offset = val;\n        this.current.start = null;\n        this.play();\n    }\n\n    get duration() {\n        return this.current.buffer ? this.current.buffer.duration : 0.001;\n    }\n}\n","export const ADD_IMG = \"imguploader/ADD_IMG\";\n\nexport const DELETE_IMG = \"imguploader/DELETE_IMG\";\n\nexport const UPLOAD_ALL = \"imguploader/UPLOAD_ALL\";\n\nexport const UPLOAD_PREPARE = \"imguploader/UPLOAD_PREPARE\";\n\nexport const UPLOAD_CANCEL = \"imguploader/UPLOAD_CANCEL\";\n","const config = {\n    baseurl: \"\",\n    defaultImg: \"http://image.innoweb.cn/2020-08-11-105353.jpg\",\n    uploadUrl: \"http://127.0.0.1:8080\",\n};\n\nexport default config;\n","import Dispatcher from \"../../../utils/Dispatcher\";\nimport config from \"../../../config/config\";\n\nconst imgFilter = /^(?:image\\/bmp|image\\/cis\\-cod|image\\/gif|image\\/ief|image\\/jpeg|image\\/jpeg|image\\/jpeg|image\\/pipeg|image\\/png|image\\/svg\\+xml|image\\/tiff|image\\/x\\-cmu\\-raster|image\\/x\\-cmx|image\\/x\\-icon|image\\/x\\-portable\\-anymap|image\\/x\\-portable\\-bitmap|image\\/x\\-portable\\-graymap|image\\/x\\-portable\\-pixmap|image\\/x\\-rgb|image\\/x\\-xbitmap|image\\/x\\-xpixmap|image\\/x\\-xwindowdump)$/i;\n\nclass ImgUpLoader {\n    constructor(uploadUrl) {\n        this.uploadUrl = uploadUrl;\n        this.files = [];\n        this.emptyImg = {\n            xhr: null,\n            name: \"\",\n            mime: \"\",\n            size: 0,\n            base64: \"\",\n            binaryString: \"\",\n            loaded: 0,\n            total: 0,\n            percentage: 0,\n            isPrepared: false,\n            isUploaded: false,\n            isUploading: false,\n        };\n        this.isUploading = false;\n        this.isPrepared = false;\n        // this.uploadingIdx = -1;\n        this.onUploading = new Dispatcher();\n        this.onError = new Dispatcher();\n        this.onLoaded = new Dispatcher();\n    }\n\n    _loadImgFileToBase64(file) {\n        return new Promise((resolve, reject) => {\n            const loader = new FileReader();\n            if (!file || !imgFilter.test(file.type)) {\n                resolve(new Error(\"not a img\"));\n            }\n            loader.onload = (e) => {\n                let imgBase64 = e.target.result;\n                resolve(imgBase64);\n            };\n            loader.onerror = reject;\n            loader.readAsDataURL(file);\n        });\n    }\n\n    _loadImgFileToBinary(file) {\n        return new Promise((resolve, reject) => {\n            const loader = new FileReader();\n            if (!file || !imgFilter.test(file.type)) {\n                resolve(new Error(\"not a img\"));\n            }\n            loader.onload = (e) => {\n                let imgBase64 = e.target.result;\n                resolve(imgBase64);\n            };\n            loader.onerror = reject;\n            loader.readAsBinaryString(file);\n        });\n    }\n\n    async append(file) {\n        const imgBase64 = await this._loadImgFileToBase64(file);\n        const imgBinary = await this._loadImgFileToBinary(file);\n        const img = {\n            xhr: null,\n            name: file.name,\n            mime: file.type,\n            size: file.size,\n            base64: imgBase64,\n            binaryString: imgBinary,\n            loaded: 0,\n            total: 0,\n            percentage: 0,\n            isPrepared: false,\n            isUploaded: false,\n            isUploading: false,\n        };\n        let newList = [...this.files.slice(), img];\n        this.files = newList;\n        return this;\n    }\n\n    delete(idx) {\n        if (\n            idx < 0 ||\n            idx >= this.files.length ||\n            this.files[idx].isUploading ||\n            this.files[idx].isUploaded\n        ) {\n            return this;\n        }\n        const newList = [\n            ...this.files.slice(0, idx),\n            ...this.files.slice(idx + 1),\n        ];\n        this.files = newList;\n        return this;\n    }\n\n    cancel(idx) {\n        if (\n            (idx >= 0 &&\n                idx < this.files.length &&\n                this.files[idx].isUploading) ||\n            this.files[idx].isUploaded\n        ) {\n            this.files[idx].xhr.abort();\n            this.files[idx].isUploading = false;\n            this.files[idx].isUploaded = false;\n            this.isUploading = false;\n            for (let i = 0; i < this.files.length; i++) {\n                if (i === idx) {\n                    continue;\n                }\n                if (this.files[i].isUploading) {\n                    this.isUploading = true;\n                }\n            }\n            return this.delete(idx);\n        }\n        return this;\n    }\n\n    uploadPrepare() {\n        this.isUploading = true;\n        this.isPrepared = true;\n        for (let i = 0; i < this.files.length; i++) {\n            this.files[i].isPrepared = true;\n            this.files[i].xhr = new XMLHttpRequest();\n        }\n        let newList = this.files.slice();\n        this.files = newList;\n        return this;\n    }\n\n    async uploadAll() {\n        if (!this.isPrepared) {\n            return this;\n        }\n        for (let i = 0; i < this.files.length; i++) {\n            if (!this.files[i].isUploaded && !this.files[i].isUploading) {\n                this.files[i].isUploading = true;\n                await this._upload(this.files[i], i).catch((err) => {\n                    console.log(err);\n                });\n            }\n        }\n        this.isUploading = false;\n        this.isPrepared = false;\n        return this;\n    }\n\n    _upload(imgFile, fileIdx) {\n        const { xhr, binaryString } = imgFile;\n        return new Promise((resolve, reject) => {\n            // 更新文件上传进度\n            xhr.upload.addEventListener(\n                \"progress\",\n                function (e) {\n                    if (e.lengthComputable) {\n                        imgFile.loaded = e.loaded;\n                        imgFile.total = e.total;\n\n                        var percentage = Math.ceil((e.loaded * 100) / e.total);\n                        imgFile.percentage = percentage;\n                        // this.onUploading.emit(this);\n                    }\n                },\n                false\n            );\n            // 文件上传成功\n            xhr.upload.addEventListener(\n                \"load\",\n                (e) => {\n                    imgFile.isUploaded = true;\n                    imgFile.isUploading = false;\n                    this.onLoaded.emit(fileIdx);\n                    resolve(\"upload success\");\n                },\n                false\n            );\n            // 文件上传失败\n            xhr.addEventListener(\"error\", (e) => {\n                imgFile.isUploading = false;\n                this.onError.emit(fileIdx);\n                reject(\"error\" + e.type.toString());\n            });\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined-binary\");\n            xhr.open(\"POST\", this.uploadUrl);\n            xhr.send(binaryString);\n        });\n    }\n}\n\nexport const loader = new ImgUpLoader(config.uploadUrl);\n","import * as actionTypes from \"./constants\";\nimport { loader } from \"./imgUpLoader\";\n\nexport const uploadImg = (file) => {\n    return (dispatch) => {\n        loader\n            .append(file)\n            .then((res) => {\n                dispatch(addImg(res));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const addImg = (res) => {\n    return {\n        res,\n        type: actionTypes.ADD_IMG,\n    };\n};\n\nexport const deleteImg = (idx) => {\n    return {\n        idx,\n        type: actionTypes.DELETE_IMG,\n    };\n};\n\nexport const uploadPrepare = () => {\n    return {\n        type: actionTypes.UPLOAD_PREPARE,\n    };\n};\n\nexport const uploadAll = (res) => {\n    return {\n        type: actionTypes.UPLOAD_ALL,\n        res,\n    };\n};\n\nexport const FinishUpload = () => {\n    return (dispatch) => {\n        loader\n            .uploadAll()\n            .then((res) => {\n                dispatch(uploadAll(res));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const uploadCancel = (idx) => {\n    return {\n        type: actionTypes.UPLOAD_CANCEL,\n        idx,\n    };\n};\n","import * as actionTypes from \"./constants\";\n\nimport { loader } from \"./imgUpLoader\";\n\nconst defaultState = {\n    files: [],\n    isUploading: false,\n    isPrepared: false,\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_IMG: {\n            return { ...state, ...action.res };\n        }\n        case actionTypes.DELETE_IMG: {\n            const result = loader.delete(action.idx);\n            return { ...state, ...result };\n        }\n        case actionTypes.UPLOAD_PREPARE: {\n            const result = loader.uploadPrepare();\n            return { ...state, ...result };\n        }\n        case actionTypes.UPLOAD_ALL: {\n            return { ...state, ...action.res };\n        }\n        case actionTypes.UPLOAD_CANCEL: {\n            const result = loader.cancel(action.idx);\n            return { ...state, ...result };\n        }\n        default:\n            return state;\n    }\n};\n","import * as actionType from \"./constants\";\n\nconst defaultState = {\n    thing: \"\",\n    intended: [\"something to do\"],\n    completed: [\"something completed\"],\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case actionType.CHANGE_INPUT_VALUE:\n            return Object.assign({}, state, {\n                thing: action.value,\n            });\n        case actionType.CLEAR_TODO_LIST:\n            return Object.assign({}, state, {\n                intended: [],\n                completed: [],\n            });\n        case actionType.ADD_TODO_ITEM:\n            let thing = state.thing ? state.thing : \"no thing is everything\";\n            return Object.assign({}, state, {\n                intended: [...state.intended, thing],\n            });\n        case actionType.FINISH_TODO_ITEM:\n            return Object.assign({}, state, {\n                completed: [...state.completed, state.intended[action.index]],\n                intended: [\n                    ...state.intended.slice(0, action.index),\n                    ...state.intended.slice(action.index + 1),\n                ],\n            });\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux-immutable\";\nimport { reducer as homeReducer } from \"../pages/home/store\";\nimport { reducer as tttReducer } from \"../games/TicTacToe/store\";\nimport { reducer as B2048Reducer } from \"../games/2048/store\";\nimport { reducer as APlayerReducer } from \"../apps/AudioPlayer/store\";\nimport { reducer as ImgUploaderReducer } from \"../apps/ImgUploader/store\";\nimport { reducer as TodoReducer } from \"../apps/Todo/store\";\n\nconst reducer = combineReducers({\n    home: homeReducer,\n    ttt: tttReducer,\n    2048: B2048Reducer,\n    APlayer: APlayerReducer,\n    ImgUploader: ImgUploaderReducer,\n    todo: TodoReducer,\n});\n\nexport default reducer;\n","export const SET_PIECE = \"ttt/SET_PIECE\";\n\nexport const RESTART_GAME = \"ttt/RESTART_GAME\";\n","export const CHANGE_INPUT_VALUE = \"change_input_value\";\nexport const CLEAR_TODO_LIST = \"clear_todo_list\";\nexport const ADD_TODO_ITEM = \"add_todo_item\";\nexport const FINISH_TODO_ITEM = \"finish_todo_item\";\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport handler from \"./../../assets/icon/header/handler.svg\";\n\nimport \"../../assets/css/public/header/index.scss\";\n\nexport default class Header extends React.Component {\n    render() {\n        return (\n            <div className=\"g-header\">\n                <div className=\"g-header__title\">\n                    <img src={handler} className=\"\" alt=\"handler\" />\n                    <span className=\"origami\">\n                        <Link to={\"/\"}>React Game</Link>\n                    </span>\n                </div>\n                <div className=\"g-header__title \"></div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport \"../../assets/css/public/progress.scss\";\n\nexport default class ProgressBar extends React.Component {\n    render() {\n        const { completed } = this.props;\n        const pxty = (completed / 100) * 74 + \"px\";\n        return (\n            <div className=\"progress-container\">\n                <div className=\"progress-bar\">\n                    <div className=\"completed\" style={{ width: pxty }}></div>\n                </div>\n                <div className=\"progress-info origami\">{completed + \"%\"}</div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport config from \"../../../config/config\";\n\nimport Progress from \"../../../common/progress\";\n\nexport default class Game extends React.Component {\n    render() {\n        let { title, completed, img } = this.props;\n        if (!img) {\n            img = config.defaultImg;\n        }\n        let imgUrl = `url(\"${img}\")`;\n        return (\n            <div className=\"g-home__box\" style={{ backgroundImage: imgUrl }}>\n                <div>\n                    <h1 className=\"crumbledPixel\">{title}</h1>\n                    <Progress completed={completed}></Progress>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { actionCreator } from \"./store\";\n\nimport \"../../assets/css/home/index.scss\";\n\nimport Game from \"./components/Game\";\n\nclass Home extends React.Component {\n    render() {\n        const { games } = this.props;\n        return (\n            <div className=\"g-home__container\">\n                {games.map((item, index) => {\n                    return (\n                        <Link key={index} to={item.url}>\n                            <Game\n                                title={item.title}\n                                completed={item.completed}\n                                img={item.img}\n                            ></Game>\n                        </Link>\n                    );\n                })}\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.props.changeHomeData();\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        games: state.getIn([\"home\", \"games\"]),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeHomeData() {\n            dispatch(actionCreator.getGames());\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport * as actionCreator from \"../store/actionCreator\";\n\nclass Piece extends React.Component {\n    render() {\n        let { piece, index } = this.props;\n        return (\n            <button\n                className=\"ttt__piece\"\n                onClick={(e) => {\n                    this.props.setPiece(e, index);\n                }}\n            >\n                {piece}\n            </button>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setPiece(e, index) {\n            e.preventDefault();\n            dispatch(actionCreator.setPiece(index));\n        },\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Piece);\n","import * as actionTypes from \"./constants\";\n\nexport const setPiece = (index) => {\n    return {\n        type: actionTypes.SET_PIECE,\n        index,\n    };\n};\n\nexport const restartGame = () => {\n    return {\n        type: actionTypes.RESTART_GAME,\n    };\n};\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport * as actionCreator from \"../store/actionCreator\";\n\nimport Piece from \"./Piece\";\n\nclass Board extends React.Component {\n    renderPiece(index) {\n        return <Piece piece={this.props.board[index]} index={index}></Piece>;\n    }\n    render() {\n        let { isNextX, winner } = this.props;\n        let info = \"TicTacToe\";\n        info = isNextX ? `Next player: X` : `Next player: O`;\n        if (winner) info = `Winner: ${winner}`;\n        return (\n            <div className=\"ttt__board\">\n                <div className=\"ttt__board__info\">{info}</div>\n                <div className=\"ttt__board__row\">\n                    {this.renderPiece(0)}\n                    {this.renderPiece(1)}\n                    {this.renderPiece(2)}\n                </div>\n                <div className=\"ttt__board__row\">\n                    {this.renderPiece(3)}\n                    {this.renderPiece(4)}\n                    {this.renderPiece(5)}\n                </div>{\" \"}\n                <div className=\"ttt__board__row\">\n                    {this.renderPiece(6)}\n                    {this.renderPiece(7)}\n                    {this.renderPiece(8)}\n                </div>\n                <button\n                    className=\"ttt__board__btn\"\n                    onClick={this.props.restartGame}\n                >\n                    Restart\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        board: state.getIn([\"ttt\", \"board\"]),\n        isNextX: state.getIn([\"ttt\", \"isNextX\"]),\n        winner: state.getIn([\"ttt\", \"winner\"]),\n    };\n};\n\nconst mapDispatchToprops = (dispatch) => {\n    return {\n        restartGame() {\n            dispatch(actionCreator.restartGame());\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Board);\n","import React from \"react\";\n\nimport Board from \"./components/Board\";\n\nimport \"../../assets/css/game/TicTacToe/index.scss\";\n\nexport default class TTT extends React.Component {\n    render() {\n        return (\n            <div className=\"ttt__container\">\n                <Board></Board>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Piece extends React.Component {\n    render() {\n        let { point } = this.props;\n        let calculatedPoint = 2 ** point;\n        let generateClass = `b2048__piece b2048__piece__${calculatedPoint}`;\n        return (\n            <div className={generateClass}>\n                {\" \"}\n                {point === -1 ? \"\" : calculatedPoint}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport Piece from \"./Piece\";\n\nexport default class Row extends React.Component {\n    render() {\n        let { row } = this.props;\n        // console.log(row);\n        return (\n            <div className=\"b2048__row\">\n                {row.map((ceil, idx) => {\n                    return <Piece point={ceil} key={idx}></Piece>;\n                })}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport Row from \"./Row\";\n\nexport default class Board extends React.Component {\n    render() {\n        let { board } = this.props;\n        return (\n            <div className=\"b2048__board\">\n                {board.map((row, idx) => {\n                    return <Row row={row} key={idx}></Row>;\n                })}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { debounce } from \"lodash\";\n\nimport * as actionCreator from \"../store/actionCreator\";\n\nconst keyUp = 38;\nconst keyRight = 39;\nconst keyDown = 40;\nconst keyLeft = 37;\nconst keyW = 87;\nconst keyS = 83;\nconst keyA = 65;\nconst keyD = 68;\nconst keyEnter = 13;\n\nclass Controller extends React.Component {\n    constructor(...args) {\n        super(...args);\n        const { delay } = this.props;\n        this.keyUpHandler = debounce(this.handleKeyUp, delay, {\n            leading: true,\n        });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"keyup\", this.keyUpHandler, false);\n        // Disable arrow keys scroll page\n        window.addEventListener(\"keydown\", this.keyDownHandler, false);\n    }\n\n    componentWillUnmount() {\n        // Never forget remove event after component unmounted,\n        // avoid memory leak\n        window.removeEventListener(\"keyup\", this.keyUpHandler, false);\n        window.removeEventListener(\"keydown\", this.keyDownHandler, false);\n    }\n\n    keyDownHandler = (e) => {\n        switch (e.keyCode) {\n            case keyUp:\n            case keyDown:\n            case keyLeft:\n            case keyRight:\n                // case keySpace:\n                e.preventDefault();\n                break;\n            default:\n                break;\n        }\n    };\n\n    handleKeyUp = (e) => {\n        switch (e.keyCode) {\n            case keyW:\n            case keyUp:\n                this.handleMoveUp();\n                break;\n            case keyS:\n            case keyDown:\n                this.handleMoveDown();\n                break;\n            case keyA:\n            case keyLeft:\n                this.handleMoveLeft();\n                break;\n            case keyD:\n            case keyRight:\n                this.handleMoveRight();\n                break;\n            case keyEnter:\n                console.log(keyEnter);\n                this.handleReset();\n                break;\n            default:\n                break;\n        }\n    };\n\n    generalMove(move) {\n        move();\n        let { isMoved } = this.props;\n        if (isMoved) this.props.audioMove.play();\n        setTimeout(() => {\n            if (isMoved) {\n                this.props.audioPopup.play();\n                this.props.onPlaceRandom();\n            }\n        }, 300);\n    }\n\n    handleMoveUp = (e) => {\n        this.generalMove(this.props.onMoveUp);\n    };\n\n    handleMoveLeft = (e) => {\n        this.generalMove(this.props.onMoveLeft);\n    };\n\n    handleMoveDown = (e) => {\n        this.generalMove(this.props.onMoveDown);\n    };\n\n    handleMoveRight = (e) => {\n        this.generalMove(this.props.onMoveRight);\n    };\n\n    handleReset = (e) => {\n        this.props.onReset();\n    };\n\n    render() {\n        // const { delay } = this.props;\n        return (\n            <div className=\"b2048__controller\">\n                Use \"W\",\"A\",\"S\",\"D\" to Controll, And use \"Enter\" to Restart.\n                {/* <button onClick={debounce(this.handleMoveUp, delay)}>↑</button>\n                <div className=\"b2048__controller__two\">\n                    <button onClick={debounce(this.handleMoveLeft, delay)}>\n                        ←\n                    </button>\n                    <button onClick={debounce(this.handleMoveDown, delay)}>\n                        ↓\n                    </button>\n                    <button onClick={debounce(this.handleMoveRight, delay)}>\n                        →\n                    </button>\n                </div> */}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isMoved: state.getIn([\"2048\", \"isMoved\"]),\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onPlaceRandom() {\n            dispatch(actionCreator.placeRandom());\n        },\n        onMoveLeft() {\n            dispatch(actionCreator.moveLeft());\n        },\n        onMoveRight() {\n            dispatch(actionCreator.moveRight());\n        },\n        onMoveUp() {\n            dispatch(actionCreator.moveUp());\n        },\n        onMoveDown() {\n            dispatch(actionCreator.moveDown());\n        },\n        onReset() {\n            dispatch(actionCreator.reset());\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controller);\n","import React from \"react\";\n\nimport Controller from \"./Controller\";\n\nexport default class Panel extends React.Component {\n    render() {\n        let { score, delay, audioMove, audioPopup } = this.props;\n        return (\n            <div className=\"b2048__panel\">\n                <div className=\"b2048__panel__info\">\n                    <h1>2048 Game</h1>\n                    <p>Score: {score}</p>\n                </div>\n                <Controller\n                    delay={delay}\n                    audioMove={audioMove}\n                    audioPopup={audioPopup}\n                ></Controller>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport Board from \"./components/Board\";\nimport Panel from \"./components/Panel\";\n\nimport moveAudio from \"../../assets/audio/2048/move.mp3\";\nimport popupAudio from \"../../assets/audio/2048/popup.mp3\";\n\nimport \"../../assets/css/game/2048/index.scss\";\n\nexport default class B2048 extends React.Component {\n    constructor(...args) {\n        super(...args);\n        this.state = {\n            delay: 200,\n        };\n        // Control game audio\n        this.audioMove = new Audio(moveAudio);\n        this.audioPopup = new Audio(popupAudio);\n    }\n\n    componentDidMount() {\n        this.props.initGame();\n    }\n    render() {\n        let { board, score, gameOver } = this.props;\n        const { audioMove, audioPopup } = this;\n        const { delay } = this.state;\n        return (\n            <div className=\"b2048__container\">\n                <Board board={board}></Board>\n                <Panel\n                    score={score}\n                    gameOver={gameOver}\n                    audioMove={audioMove}\n                    audioPopup={audioPopup}\n                    delay={delay}\n                ></Panel>\n            </div>\n        );\n    }\n}\n","import { connect } from \"react-redux\";\n\nimport { actionCreator } from \"./store/index\";\n\nimport B2048 from \"./B2048\";\n\nconst mapStateToProps = (state) => {\n    return {\n        size: state.getIn([\"2048\", \"size\"]),\n        maxLevel: state.getIn([\"2048\", \"maxLevel\"]),\n        score: state.getIn([\"2048\", \"score\"]),\n        board: state.getIn([\"2048\", \"board\"]),\n        gameOver: state.getIn([\"2048\", \"gameOver\"]),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initGame() {\n            dispatch(actionCreator.init());\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(B2048);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actionCreator from \"../store/actionCreator\";\n\nclass Disk extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleFile = this.handleFile.bind(this);\n    }\n\n    render() {\n        let { isPlaying } = this.props;\n        return (\n            <div\n                className={\n                    !isPlaying\n                        ? \"APlayer__disk__container\"\n                        : \"APlayer__disk__container APlayer__disk__container--playing\"\n                }\n            >\n                <label\n                    htmlFor=\"file\"\n                    className={\n                        !isPlaying\n                            ? \"APlayer__disk__cover\"\n                            : \"APlayer__disk__cover APlayer__disk__cover--playing\"\n                    }\n                ></label>\n                <input\n                    id=\"file\"\n                    type=\"file\"\n                    htmlref=\"file\"\n                    accept=\".mp3\"\n                    multiple\n                    onChange={this.handleFile}\n                />\n            </div>\n        );\n    }\n    handleFile(e) {\n        e.persist();\n        let files = e.target.files ? e.target.files : [];\n        for (let i = 0; i < files.length; i++) {\n            this.props.addMusic(files[i]);\n        }\n        e.target.value = \"\";\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMusic(file) {\n            dispatch(actionCreator.addMusic(file));\n        },\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Disk);\n","import * as actionTypes from \"./contants\";\n\nexport const addMusic = (file) => {\n    return {\n        file,\n        type: actionTypes.ADD_MUSIC,\n    };\n};\n\nexport const start = () => {\n    return {\n        type: actionTypes.START,\n    };\n};\n\nexport const pause = () => {\n    return {\n        type: actionTypes.PAUSE,\n    };\n};\n\nexport const getPrevMusic = () => {\n    return {\n        type: actionTypes.GET_PREV,\n    };\n};\n\nexport const getNextMusic = () => {\n    return {\n        type: actionTypes.GET_NEXT,\n    };\n};\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport * as actionCreator from \"../store/actionCreator\";\n\nclass Controller extends React.Component {\n    render() {\n        let { isPlaying, hasMusic } = this.props;\n        let centerIcon = <i className=\"fa fa-ban\" />;\n        if (hasMusic) {\n            centerIcon = isPlaying ? (\n                <i className=\"fa fa-pause\" />\n            ) : (\n                <i className=\"fa fa-play\" />\n            );\n        }\n        return (\n            <div className=\"APlayer__controller__container\">\n                <div\n                    className=\"APlayer__controller__radio\"\n                    onClick={this.ControllHandler.bind(\n                        this,\n                        this.props.getPrev\n                    )}\n                >\n                    <i className=\"fa fa-backward\" />\n                </div>\n                <div\n                    className={\n                        isPlaying\n                            ? \"APlayer__controller__radio APlayer__controller__radio--active\"\n                            : \"APlayer__controller__radio\"\n                    }\n                    onClick={this.ControllHandler.bind(\n                        this,\n                        isPlaying ? this.props.pause : this.props.start\n                    )}\n                >\n                    {centerIcon}\n                </div>\n                <div\n                    className=\"APlayer__controller__radio\"\n                    onClick={this.ControllHandler.bind(\n                        this,\n                        this.props.getNext\n                    )}\n                >\n                    <i className=\"fa fa-forward\" />\n                </div>\n            </div>\n        );\n    }\n    ControllHandler(handler) {\n        if (this.props.hasMusic) {\n            handler();\n        } else {\n            alert(\"no musics\");\n        }\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getNext() {\n            dispatch(actionCreator.getNextMusic());\n        },\n        getPrev() {\n            dispatch(actionCreator.getPrevMusic());\n        },\n        start() {\n            dispatch(actionCreator.start());\n        },\n        pause() {\n            dispatch(actionCreator.pause());\n        },\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Controller);\n","import React from \"react\";\n\nexport default class ProgressBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            progress: \"0%\",\n            position: 0,\n            duration: 0,\n            name: \"Unkown\",\n            frameId: \"\",\n        };\n    }\n\n    componentDidMount() {\n        const draw = () => {\n            let frameId = requestAnimationFrame(draw);\n            const percent =\n                this.props.player.position / this.props.player.duration;\n            this.setState({\n                progress: `${(percent * 100).toFixed(2)}%`,\n                position: this.props.player.position,\n                duration: this.props.player.duration,\n                name: this.props.player.current.file\n                    ? this.props.player.current.file.name\n                    : \"Unkown\",\n                frameId,\n            });\n        };\n\n        draw();\n    }\n    componentWillUnmount() {\n        if (this.state.frameId) {\n            cancelAnimationFrame(this.state.frameId);\n        }\n    }\n    formatTime(val) {\n        const min = Math.floor(val / 60);\n        const sec = Math.floor(val % 60);\n        return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n    }\n    formatName(val) {\n        return val.replace(/\\.mp3$/, \"\");\n    }\n    render() {\n        let { hasMusic, isPlaying } = this.props;\n        let { position, duration, progress, name } = this.state;\n        return (\n            <div\n                className={\n                    hasMusic && isPlaying\n                        ? \"APlayer__progress__container APlayer__progress__container--active\"\n                        : \"APlayer__progress__container\"\n                }\n            >\n                {\" \"}\n                <h2 className=\"APlayer__progress__title\">\n                    {this.formatName(name)}\n                </h2>{\" \"}\n                <div className=\"APlayer__progress__line\">\n                    <span style={{ width: progress }}></span>\n                </div>{\" \"}\n                <span className=\"APlayer__progress__time\">\n                    {this.formatTime(position) +\n                        \"/\" +\n                        this.formatTime(duration)}\n                </span>{\" \"}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport \"../../assets/css/app/AudioPlayer/index.scss\";\n\nimport Disk from \"./components/Disk\";\nimport Controller from \"./components/Controller\";\nimport ProgressBar from \"./components/ProgressBar\";\n\nexport default class AudioPlayer extends React.Component {\n    render() {\n        let { hasMusic, isPlaying, player } = this.props;\n        return (\n            <div className=\"APlayer\">\n                <div className=\"APlayer__disk\">\n                    <Disk hasMusic={hasMusic} isPlaying={isPlaying}></Disk>\n                </div>\n                <div className=\"APlayer__controller\">\n                    <Controller\n                        hasMusic={hasMusic}\n                        isPlaying={isPlaying}\n                    ></Controller>\n                </div>\n                <div className=\"APlayer__progress\">\n                    <ProgressBar\n                        hasMusic={hasMusic}\n                        isPlaying={isPlaying}\n                        player={player}\n                    ></ProgressBar>\n                </div>\n            </div>\n        );\n    }\n}\n","import { connect } from \"react-redux\";\n\nimport AudioPlayer from \"./AudioPlayer\";\n\nlet mapStateToProps = (state) => {\n    return {\n        hasMusic: state.getIn([\"APlayer\", \"hasMusic\"]),\n        isPlaying: state.getIn([\"APlayer\", \"isPlaying\"]),\n        player: state.getIn([\"APlayer\", \"player\"]),\n    };\n};\n\nexport default connect(mapStateToProps, null)(AudioPlayer);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport TTT from \"../../games/TicTacToe\";\nimport B2048 from \"../../games/2048\";\n\nimport AudioPlayer from \"../../apps/AudioPlayer\";\n\nimport \"../../assets/css/game/index.scss\";\n\nexport default class Games extends React.Component {\n    render() {\n        return (\n            <div className=\"g-game__container\">\n                <Route path=\"/game/ttt\" component={TTT}></Route>\n                <Route path=\"/game/2048\" component={B2048}></Route>\n                <Route path=\"/game/audio\" component={AudioPlayer}></Route>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Loader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleAdd = this.handleAdd.bind(this);\n    }\n\n    render() {\n        let { files } = this.props;\n        return (\n            <div className=\"FUploader__loader\">\n                <label\n                    htmlFor=\"file\"\n                    className=\"FUploader__box FUploader__box--add\"\n                >\n                    <input\n                        id=\"file\"\n                        type=\"file\"\n                        htmlref=\"file\"\n                        multiple\n                        onChange={this.handleAdd}\n                    />{\" \"}\n                </label>{\" \"}\n                {files.map((file, idx) => {\n                    if (file.isUploading || file.isUploaded) {\n                        return null;\n                    }\n                    return (\n                        <div className=\"FUploader__box\" key={idx}>\n                            <img src={file.base64} alt={file.name} />\n                            <button\n                                className=\"FUploader__box__btn\"\n                                onClick={this.handleDel.bind(this, idx)}\n                            ></button>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    handleAdd(e) {\n        let files = e.target.files;\n        for (let i = 0; i < files.length; i++) {\n            this.props.addImg(files[i]);\n        }\n\n        e.target.value = \"\";\n    }\n    handleDel(idx) {\n        this.props.deleteImg(idx);\n    }\n}\n","import React from \"react\";\n\nexport default class Submitter extends React.Component {\n    render() {\n        return (\n            <div>\n                <button\n                    className=\"FUploader__btn crumbledPixel\"\n                    onClick={this.props.uploadAll}\n                >\n                    upload\n                </button>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport gif from \"./asset/gif.svg\";\nimport png from \"./asset/png.svg\";\nimport jpg from \"./asset/jpg.svg\";\nimport jpeg from \"./asset/jpeg.svg\";\nimport svg from \"./asset/svg.svg\";\nimport bmp from \"./asset/bmp.svg\";\nimport tiff from \"./asset/tiff.svg\";\n\nimport unknown from \"./asset/unknown.svg\";\n\nimport \"../../assets/css/public/fileIcon.scss\";\n\nexport default class FileIcon extends React.Component {\n    render() {\n        let { type } = this.props;\n        let subType = this.formatImgType(type);\n        let imgIcon;\n        switch (subType) {\n            case \"gif\":\n                imgIcon = <img src={gif} className=\"\" alt={subType} />;\n                break;\n            case \"png\":\n                imgIcon = <img src={png} className=\"\" alt={subType} />;\n                break;\n            case \"jpeg\":\n                imgIcon = <img src={jpeg} className=\"\" alt={subType} />;\n                break;\n            case \"jpg\":\n                imgIcon = <img src={jpg} className=\"\" alt={subType} />;\n                break;\n            case \"svg\":\n                imgIcon = <img src={svg} className=\"\" alt={subType} />;\n                break;\n            case \"bmp\":\n                imgIcon = <img src={bmp} className=\"\" alt={subType} />;\n                break;\n            case \"tiff\":\n                imgIcon = <img src={tiff} className=\"\" alt={subType} />;\n                break;\n            default:\n                imgIcon = <img src={unknown} className=\"\" alt={subType} />;\n        }\n\n        return <div className=\"file-icon\">{imgIcon}</div>;\n    }\n    formatImgType(type) {\n        let multiType = type.split(\"/\");\n        let subType = multiType.length > 1 ? multiType[1] : \"unknown\";\n        return subType;\n    }\n}\n","import React from \"react\";\n\nimport \"../../assets/css/public/roundProgress.scss\";\n\nexport default class RoundProgress extends React.Component {\n    render() {\n        let { percent } = this.props;\n        return (\n            <div className=\"round-progress\">\n                <span style={{ width: percent }}></span>\n            </div>\n        );\n    }\n}\n","import React, { Fragment, Component } from \"react\";\n\nimport close from \"../../../assets/icon/public/close.svg\";\n\nimport { loader } from \"../store/imgUpLoader\";\n\nexport default class UploadInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: null,\n        };\n    }\n\n    render() {\n        let { info, idx } = this.props;\n        let { info: overInfo } = this.state;\n        info = overInfo ? overInfo : info;\n        return (\n            <Fragment>\n                <img\n                    src={close}\n                    alt=\"close\"\n                    onClick={this.props.cancelUpload.bind(this, idx)}\n                />\n                {info}\n            </Fragment>\n        );\n    }\n\n    componentDidMount() {\n        loader.onError.listen((idx) => {\n            this.showError(idx);\n        });\n        loader.onLoaded.listen((idx) => {\n            this.showInfo(idx);\n        });\n    }\n\n    showError(fileIdx) {\n        if (fileIdx !== this.props.idx) {\n            return;\n        }\n        let info = (\n            <span style={{ color: \"red\", fontSize: \"14px\" }}>upload fail</span>\n        );\n        this.setState({\n            info,\n        });\n    }\n\n    showInfo(fileIdx) {\n        if (fileIdx !== this.props.idx) {\n            return;\n        }\n        let info = (\n            <span style={{ color: \"green\", fontSize: \"14px\" }}>\n                upload success\n            </span>\n        );\n        this.setState({\n            info,\n        });\n    }\n}\n","export function byteTransform(nBytes) {\n    let sOutput = nBytes + \" B\";\n    const aMultiples = [\"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    for (\n        let nMultiple = 0, nApprox = nBytes / 1024;\n        nApprox > 1;\n        nApprox /= 1024, nMultiple++\n    ) {\n        sOutput = nApprox.toFixed(2) + \" \" + aMultiples[nMultiple];\n    }\n    return sOutput;\n}\n","import React from \"react\";\n\nimport ImgIcon from \"../../../common/ImgIcon\";\nimport RoundProgress from \"../../../common/RoundProgress\";\nimport UploadInfo from \"./UploadInfo\";\n\nimport { byteTransform } from \"../../../utils/byte\";\n\nexport default class UploadBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: 0,\n            total: 0,\n            percentage: \"0%\",\n            info: \"0B/0B\",\n            frameId: null,\n        };\n    }\n\n    componentDidMount() {\n        let { file } = this.props;\n        const draw = () => {\n            let frameId = requestAnimationFrame(draw);\n            let loaded = file.loaded;\n            let total = file.total === 0 ? file.size : file.total;\n            let percentage = `${file.percentage}%`;\n            let info = (\n                <span>\n                    {byteTransform(loaded) + \" / \" + byteTransform(total)}\n                </span>\n            );\n            this.setState({\n                loaded,\n                total,\n                percentage,\n                info,\n                frameId,\n            });\n        };\n        draw();\n    }\n\n    componentWillUnmount() {\n        if (this.state.frameId) {\n            cancelAnimationFrame(this.state.frameId);\n        }\n    }\n\n    render() {\n        let { file, idx } = this.props;\n        let { info, percentage } = this.state;\n        return (\n            <div className=\"FUploader__uploader__box\">\n                <div className=\"FUploader__uploader__icon\">\n                    <ImgIcon type={file.mime}></ImgIcon>\n                </div>\n                <div className=\"FUploader__uploader__progress\">\n                    {file.name}\n                    <RoundProgress percent={percentage}></RoundProgress>\n                    {/* {file.percentage} */}\n                </div>\n                <div className=\"FUploader__uploader__info\">\n                    <UploadInfo\n                        cancelUpload={this.props.cancelUpload}\n                        info={info}\n                        idx={idx}\n                    ></UploadInfo>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport UploadBox from \"./UploadBox\";\n\nexport default class Uploader extends React.Component {\n    render() {\n        let { files } = this.props;\n        let isUploading = false;\n        for (let i = 0; i < files.length; i++) {\n            if (\n                files[i].isUploading ||\n                files[i].isUploaded ||\n                files[i].isPrepared\n            ) {\n                isUploading = true;\n                break;\n            }\n        }\n        return (\n            <div className=\"FUploader__uploader\">\n                {!isUploading && (\n                    <span className=\"crumbledPixel\">No image uploading...</span>\n                )}\n                {files.map((file, idx) => {\n                    if (file.isUploading || file.isPrepared) {\n                        return (\n                            <UploadBox\n                                file={file}\n                                key={idx}\n                                idx={idx}\n                                cancelUpload={this.props.cancelUpload}\n                            ></UploadBox>\n                        );\n                    }\n                    return null;\n                })}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport Loader from \"./components/Loader\";\nimport Submitter from \"./components/Submitter\";\n\nimport Uploader from \"./components/Uploader\";\n\nimport \"../../assets/css/app/ImgUploader/index.scss\";\n\nexport default class ImgUploader extends React.Component {\n    render() {\n        let { files, isPrepared, isUploading } = this.props;\n        return (\n            <div className=\"FUploader\">\n                <div className=\"FUploader__left\">\n                    <Loader\n                        files={files}\n                        addImg={this.props.addImg}\n                        deleteImg={this.props.deleteImg}\n                    ></Loader>\n                    <Submitter uploadAll={this.props.uploadAll}></Submitter>\n                </div>\n                <div className=\"divider\"></div>\n                <div className=\"FUploader__right\">\n                    <Uploader\n                        files={files}\n                        isPrepared={isPrepared}\n                        isUploading={isUploading}\n                        cancelUpload={this.props.cancelUpload}\n                    ></Uploader>\n                </div>\n            </div>\n        );\n    }\n}\n","import { connect } from \"react-redux\";\nimport ImgUploader from \"./ImgUploader\";\n\nimport { actionCreator } from \"./store/index\";\n\nconst mapStateToProps = (state) => {\n    return {\n        files: state.getIn([\"ImgUploader\", \"files\"]),\n        isPrepared: state.getIn([\"ImgUploader\", \"isPrepared\"]),\n        isUploading: state.getIn([\"ImgUploader\", \"isUploading\"]),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        uploadAll() {\n            dispatch(actionCreator.uploadPrepare());\n            dispatch(actionCreator.FinishUpload());\n        },\n        addImg(file) {\n            dispatch(actionCreator.uploadImg(file));\n        },\n        deleteImg(idx) {\n            dispatch(actionCreator.deleteImg(idx));\n        },\n        cancelUpload(idx) {\n            console.log(idx);\n            dispatch(actionCreator.uploadCancel(idx));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImgUploader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    getInputChangeAction,\n    clearTodoListAction,\n    addTodoItemAction,\n} from \"../store/actionCreator\";\n\nclass TodoController extends React.Component {\n    render() {\n        return (\n            <div className=\"todo-controller\">\n                <input\n                    type=\"text\"\n                    value={this.props.thing}\n                    onChange={this.props.changeInput}\n                />\n                <button onClick={this.props.addTodoItem}>add</button>\n                <button onClick={this.props.clearTodoList}>clear</button>\n\n                {/* <input type=\"file\" onChange={this.handleChange.bind(this)} /> */}\n            </div>\n        );\n    }\n    // handleChange(e) {\n    //     console.log(e.target.files);\n    //     let file = e.target.files[0];\n    //     for (let key in file) {\n    //         console.log(Object.getOwnPropertyDescriptor(file, key));\n    //         // console.log(file[key]);\n    //     }\n    //     let f = JSON.parse(JSON.stringify(file));\n    //     console.log(f);\n    // }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        thing: state.getIn([\"todo\", \"thing\"]),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeInput(e) {\n            let value = e.target.value;\n            const action = getInputChangeAction(value);\n            dispatch(action);\n        },\n        addTodoItem(e) {\n            e.preventDefault();\n            const action = addTodoItemAction();\n            dispatch(action);\n        },\n        clearTodoList(e) {\n            e.preventDefault();\n            const action = clearTodoListAction();\n            dispatch(action);\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoController);\n","import {\n    CHANGE_INPUT_VALUE,\n    CLEAR_TODO_LIST,\n    ADD_TODO_ITEM,\n    FINISH_TODO_ITEM,\n} from \"./constants\";\n\nexport const getInputChangeAction = (value) => ({\n    type: CHANGE_INPUT_VALUE,\n    value,\n});\n\nexport const clearTodoListAction = () => ({\n    type: CLEAR_TODO_LIST,\n});\n\nexport const addTodoItemAction = () => ({\n    type: ADD_TODO_ITEM,\n});\n\nexport const finishTodoItemAction = (index) => ({\n    type: FINISH_TODO_ITEM,\n    index,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { finishTodoItemAction } from \"../store/actionCreator\";\n\nclass TodoItem extends React.Component {\n    render() {\n        return (\n            <div className={\"todoItem \" + this.props.status}>\n                <div>{this.props.todoItem}</div>\n                {this.props.status === \"intended\" && (\n                    <div onClick={this.props.finishTodoItem}>×</div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        finishTodoItem(e) {\n            e.preventDefault();\n            const action = finishTodoItemAction(ownProps.todoIdx);\n            dispatch(action);\n        },\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(TodoItem);\n","import React from \"react\";\n\nimport TodoItem from \"./Item\";\n\nexport default class TodoList extends React.Component {\n    render() {\n        const list = this.props.list;\n        const status = this.props.status;\n        return (\n            <div className=\"todo-list\">\n                {list.map((item, idx) => {\n                    return (\n                        <TodoItem\n                            status={status}\n                            todoItem={item}\n                            todoIdx={idx}\n                            key={idx}\n                        ></TodoItem>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport \"../../assets/css/app/Todo/index.scss\";\n\nimport TodoController from \"./components/Controller\";\nimport TodoList from \"./components/List\";\n\nexport default class Todo extends React.Component {\n    render() {\n        return (\n            <div className=\"todo-container\">\n                <h1>React Todo</h1>\n                <h3>Tended</h3>\n                <TodoList\n                    list={this.props.intended}\n                    status=\"intended\"\n                ></TodoList>\n                <h3>Completed</h3>\n                <TodoList\n                    list={this.props.completed}\n                    status=\"completed\"\n                ></TodoList>\n                <TodoController></TodoController>\n            </div>\n        );\n    }\n}\n","import { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\n\nconst mapStateToProps = (state) => {\n    return {\n        intended: state.getIn([\"todo\", \"intended\"]),\n        completed: state.getIn([\"todo\", \"completed\"]),\n    };\n};\n\nexport default connect(mapStateToProps, null)(Todo);\n// 将 TodoUI 和 store 做连接\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport AudioPlayer from \"../../apps/AudioPlayer\";\nimport ImgUploader from \"../../apps/ImgUploader\";\nimport Todo from \"../../apps/Todo\";\n\nimport \"../../assets/css/app/index.scss\";\n\nexport default class Apps extends React.Component {\n    render() {\n        return (\n            <div className=\"g-app__container\">\n                <Route path=\"/app/audio\" component={AudioPlayer}></Route>\n                <Route path=\"/app/imguploader\" component={ImgUploader}></Route>\n                <Route path=\"/app/todo\" component={Todo}></Route>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport store from \"./store\";\n\nimport \"./assets/css/reset.css\";\nimport \"./assets/css/App.css\";\nimport \"./assets/css/public/index.scss\";\n\nimport Header from \"./common/header/index\";\nimport Home from \"./pages/home\";\nimport Games from \"./pages/game\";\nimport Apps from \"./pages/app\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <div className=\"g-container\">\n                    <Header />\n                    <Switch>\n                        <Route path=\"/\" exact component={Home}></Route>\n                        <Route path=\"/game\" component={Games}></Route>\n                        <Route path=\"/app\" component={Apps}></Route>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/handler.d79a914c.svg\";","module.exports = __webpack_public_path__ + \"static/media/move.7d5eff42.mp3\";","module.exports = __webpack_public_path__ + \"static/media/popup.4af4d408.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gif.dc58df6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/png.bdfa7dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/jpg.27cdf60a.svg\";","module.exports = __webpack_public_path__ + \"static/media/jpeg.a09f743b.svg\";","module.exports = __webpack_public_path__ + \"static/media/svg.33993a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/bmp.1990e4c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/tiff.af4dd8a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.82643072.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.a8bc56f2.svg\";"],"sourceRoot":""}